// A schema is a collection of type definitions (hence "typeDefs")
// that together define the "shape" of queries that are executed against
// your data.

  # Comments in GraphQL strings (such as this one) start with the hash (#) symbol.
  # The "Query" type is special: it lists all of the available queries that
  # clients can execute, along with the return type for each.

// Resolvers define how to fetch the types defined in your schema.

// The ApolloServer constructor requires two parameters: your schema
// definition and your set of resolvers.

  // Passing an ApolloServer instance to the `startStandaloneServer` function:
  //  1. creates an Express app
  //  2. installs your ApolloServer instance as middleware
  //  3. prepares your app to handle incoming requests

If you're currently using the apollo-server package, 
you should use the startStandaloneServer function.

If you're currently using the apollo-server-express package, 
you should use the expressMiddleware function.